# grammar for mlang
# The right side of each production rule enclosed by curly parentheses is semantic action in 
# generating AST tree when the rule is applied to reduce to left symbol of the grammar rule.

start      = stmts                          { 0 }
block      = NEWLINE INDENT stmts DEDENT    { 2 }
           | expr                           { block 0 }
stmts      = stmts stmt                     { block 0 1 }
           | stmt                           { block 0 }
stmt       = func                           { 0 }
           | expr                           { 0 }
func       = IDENT '(' ')' '=' block        { func 0 4 }
expr       = expr [+-] term                 { binop 0 1 2 }
           | term                           { 0 }
term       = term [*/%] factor              { binop 0 1 2 }
           | factor                         { 0 }
factor     = '(' expr ')'                   { 1 }
           | power                          { 0 }
power      = INT '^' factor                 { binop 0 1 2 }
           | INT                            { 0 }
