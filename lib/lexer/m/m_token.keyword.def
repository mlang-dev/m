    TOKEN_PATTERN(INDENT, 0, 0),
    TOKEN_PATTERN(DEDENT, 0, 0),
    TOKEN_PATTERN(LITERAL_CHAR, 0, "string"),
    TOKEN_PATTERN(LITERAL_STRING, 0, "string"),
    TOKEN_PATTERN(NEWLINE, "\n", 0),
    TOKEN_PATTERN(LITERAL_INT, "[0-9]+|0x[0-9a-fA-F]+", "number"),
    TOKEN_PATTERN(LITERAL_FLOAT, "([0-9]*.)?[0-9]+", "number"),
    TOKEN_PATTERN(LITERAL_COMPLEX, "([0-9]*.)?[0-9]+ \\+ ([0-9]*.)?[0-9]*i", "number"),

    KEYWORD_PATTERN_STYLE(PYCOMMENT, "#", "#", "pycomment"),
    KEYWORD_PATTERN_STYLE(LINECOMMENT, "//", "//", "comment"),
    KEYWORD_PATTERN_STYLE(BLOCKCOMMENT, "/*", "/\\*", "block-comment"),
    KEYWORD_PATTERN_STYLE(WILDCARD, "_", "_", "variable"), 

    KEYWORD_PATTERN(FROM, "from"), 
    KEYWORD_PATTERN(MEMORY, "memory"),
    KEYWORD_PATTERN(EXTERN, "extern"), 

    //WIT items
    KEYWORD_PATTERN(NONE, "None"), 
    KEYWORD_PATTERN(TYPE_BOOL, "bool"), 
    KEYWORD_PATTERN(TYPE_INT, "int"), 
    KEYWORD_PATTERN(TYPE_U8, "u8"), 
    KEYWORD_PATTERN(TYPE_U16, "u16"), 
    KEYWORD_PATTERN(TYPE_U32, "u32"), 
    KEYWORD_PATTERN(TYPE_U64, "u64"), 
    KEYWORD_PATTERN(TYPE_I8, "i8"), 
    KEYWORD_PATTERN(TYPE_I16, "i16"), 
    KEYWORD_PATTERN(TYPE_I32, "i32"), 
    KEYWORD_PATTERN(TYPE_I64, "i64"), 
    KEYWORD_PATTERN(TYPE_F32, "f32"), 
    KEYWORD_PATTERN(TYPE_F64, "f64"), 
    KEYWORD_PATTERN(TYPE_CHAR, "char"), 
    KEYWORD_PATTERN(TYPE_STRING, "string"), 
    
    KEYWORD_PATTERN(USE, "use"), 
    KEYWORD_PATTERN(TYPE, "type"),
    KEYWORD_PATTERN(RESOURCE, "resource"), 
    KEYWORD_PATTERN(FUN, "func"),
    KEYWORD_PATTERN(STRUCT, "struct"),
    KEYWORD_PATTERN(RECORD, "record"),
    KEYWORD_PATTERN(ENUM, "enum"),
    KEYWORD_PATTERN(FLAGS, "flags"),
    KEYWORD_PATTERN(VARIANT, "variant"),
    KEYWORD_PATTERN(UNION, "union"),
    KEYWORD_PATTERN(OPTION, "option"),
    KEYWORD_PATTERN(LIST, "list"),
    KEYWORD_PATTERN(RESULT, "result"),
    KEYWORD_PATTERN(AS, "as"),
    KEYWORD_PATTERN(STATIC, "static"),
    KEYWORD_PATTERN(INTERFACE, "interface"),
    KEYWORD_PATTERN(WORLD, "world"),
    KEYWORD_PATTERN(TUPLE, "tuple"),
    KEYWORD_PATTERN(FUTURE, "future"),
    KEYWORD_PATTERN(STREAM, "stream"),
    KEYWORD_PATTERN(IMPORT, "import"),
    KEYWORD_PATTERN(EXPORT, "export"),
    KEYWORD_PATTERN(PACKAGE, "package"),
    KEYWORD_PATTERN(INCLUDE, "include"),
    KEYWORD_PATTERN(CLASS, "class"),
    KEYWORD_PATTERN(BORROW, "borrow"),
    KEYWORD_PATTERN(DEFAULT, "default"),

    KEYWORD_PATTERN(DEF, "def"),
    KEYWORD_PATTERN(LET, "let"),
    KEYWORD_PATTERN(MUT, "mut"),
    KEYWORD_PATTERN(MAPTO, "->"),
    KEYWORD_PATTERN(IF, "if"),
    KEYWORD_PATTERN(ELIF, "elif"),
    KEYWORD_PATTERN(ELSE, "else"), 

    KEYWORD_PATTERN(TRUE, "True"),
    KEYWORD_PATTERN(FALSE, "False"),
    KEYWORD_PATTERN(IN, "in"),
    KEYWORD_PATTERN(FOR, "for"),
    KEYWORD_PATTERN(WHILE, "while"),
    KEYWORD_PATTERN(BREAK, "break"),
    KEYWORD_PATTERN(CONTINUE, "continue"),
    KEYWORD_PATTERN(RETURN, "return"),
    KEYWORD_PATTERN(CONSTRUCTOR, "constructor"),

    KEYWORD_PATTERN(MATCH, "match"),
    KEYWORD_PATTERN(WITH, "with"),
    KEYWORD_PATTERN(WHEN, "when"),
    
    KEYWORD_PATTERN(NEW, "new"),
    KEYWORD_PATTERN(DEL, "del"),

    /*reserved keywords*/
    KEYWORD_PATTERN(YIELD, "yield"),
    KEYWORD_PATTERN(ASYNC, "async"),
    KEYWORD_PATTERN(AWAIT, "await"),

    TOKEN_PATTERN(IDENT, "[_a-zA-Z][_a-zA-Z0-9]*", 0), 

    //operators
    NAME_KEYWORD_PATTERN(LPAREN, "(", "\\("),
    NAME_KEYWORD_PATTERN(RPAREN, ")", "\\)"),
    NAME_KEYWORD_PATTERN(LBRACKET, "[", "\\["),
    NAME_KEYWORD_PATTERN(RBRACKET, "]", "\\]"),
    KEYWORD_PATTERN(LCBRACKET, "{"), // 25
    KEYWORD_PATTERN(RCBRACKET, "}"),

    KEYWORD_PATTERN(COMMA, ","),
    KEYWORD_PATTERN(SEMICOLON, ";"),

    NAME_KEYWORD_PATTERN(RANGE, "..", "\\.\\."),
    NAME_KEYWORD_PATTERN(VARIADIC, "...", "\\.\\.\\."),
    KEYWORD_PATTERN(ISTYPEOF, ":"),
