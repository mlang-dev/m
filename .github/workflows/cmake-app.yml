name: CMake App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Install LLVM & LLD
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main"
        sudo apt install clang-13 lldb-13 lld-13 libclang-13-dev liblld-13-dev
#        sudo ln /usr/bin/clang-13 /usr/bin/clang
#        sudo ln /usr/bin/clang++-13 /usr/bin/clang++
        sudo ln /usr/bin/llvm-ar-13 /usr/bin/llvm-ar
        sudo ln /usr/bin/llvm-nm-13 /usr/bin/llvm-nm
        sudo ln /usr/bin/llvm-ranlib-13 /usr/bin/llvm-ranlib
        sudo ln /usr/bin/wasm-ld-13 /usr/bin/wasm-ld
        sudo ln /usr/bin/llvm-config-13 /usr/bin/llvm-config

    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 

    - name: Build m
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
